好的，如果您使用的是 Windows 平台，并且将 main.py 加密为名为 main.exe 的可执行文件，则需要将 run.sh 文件修改为以下内容：

#!/bin/bash

# 启动 Redis 服务器
redis-server &

# 启动 DNS 服务
python3 /app/dns.py &

# 启动加密的 Flask 应用程序
./main.exe
在 Dockerfile 中，您还需要将加密的 main.exe 可执行文件复制到容器中的 /app 目录中。以下是修改后的 Dockerfile 示例：

FROM nginx

# 将加密的 Python 可执行文件复制到容器中的 /app 目录
COPY main.exe /app/main.exe

# 复制前端文件到容器中的 /usr/share/nginx/html 目录
COPY index.html /usr/share/nginx/html

# 将 Nginx 配置文件复制到容器中的 /etc/nginx/conf.d/default.conf
COPY nginx.conf /etc/nginx/nginx.conf

# 暴露容器的端口 22771-web 22770-dns 22772-redis
EXPOSE 22771 22770 22772

# 启动 Nginx 和 Python 应用程序
CMD ["nginx", "-g", "daemon off;"]
这样配置后，您应该能够在 Windows 平台上打包加密的 Python 应用程序，并将其运行在 Docker 容器中，同时保护您的代码免受未经授权访问。




